#!/usr/bin/env escript
%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ft=erlang ts=4 sw=4 et
%% -------------------------------------------------------------------
%%
%% replsrv: Hamler REPL Server
%%
%% -------------------------------------------------------------------
-mode(compile).

-define(MOD, '$PSCI').

main(Args) ->
    %% TODO: Fix the hard code path
    code:add_path("/Users/hk/github/hamler/.psci_modules/node_modules/"),
    File = "/Users/hk/github/hamler/.psci_modules/node_modules/\$PSCI.core",

    reploop(Args, #{file => File}).

reploop(Args, State = #{file := File}) ->
    case io:get_line("") of
        eof -> halt(0);
        _Expr ->
            try
                code:purge(?MOD),
                code:load_file(?MOD),
                {ok, _} = compile:file(File, [from_core]),
                print(?MOD:it())
            catch
                Error:Reason:Stk ->
                    io:format("Error: ~p, Reason: ~p~nStacktrace:~p~n", [Error, Reason, Stk])
            end,
            reploop(Args, State)
    end.

%% @private
print(I) when is_integer(I) ->
    io:format("~w~n", [I]);
print(A) when is_atom(A) ->
    io:format("~s~n", [A]);
print(T) ->
    io:format("~p~n", [T]).

