module 'Env' ['getAllEnv'/0,
	      'getEnv'/1,
	      'lookupEnv'/1,
	      'module_info'/0,
	      'module_info'/1,
	      'setEnv'/2,
	      'unsetEnv'/1]
    attributes [%% Line 1
		'file' =
		    %% Line 1
		    [{[69|[110|[118|[46|[101|[114|[108]]]]]]],1}]]
'getAllEnv'/0 =
    %% Line 24
    fun () ->
	%% Line 25
	( letrec
	      'lc$^0'/1 =
		  fun (_3) ->
		      case _3 of
			<[Env|_1]> when 'true' ->
			    let <_4> =
				call 'string':'split'
				    (Env, [61])
			    in  let <_5> =
				    call 'erlang':'list_to_tuple'
					(_4)
				in  let <_6> =
					apply 'lc$^0'/1
					    (_1)
				    in  ( [_5|_6]
					  -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_7> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_7})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  let <_2> =
		  call 'os':'getenv'
		      ()
	      in  apply 'lc$^0'/1
		      (_2)
	  -| ['list_comprehension'] )
'getEnv'/1 =
    %% Line 27
    fun (_0) ->
	%% Line 28
	case call 'os':'getenv'
		 (_0) of
	  %% Line 29
	  <'false'> when 'true' ->
	      call 'erlang':'error'
		  ([69|[110|[118|[68|[111|[101|[115|[78|[111|[116|[69|[120|[105|[115|[116|[69|[114|[114|[111|[114]]]]]]]]]]]]]]]]]]]])
	  %% Line 30
	  <Value> when 'true' ->
	      Value
	end
'lookupEnv'/1 =
    %% Line 33
    fun (_0) ->
	%% Line 34
	case call 'os':'getenv'
		 (_0) of
	  %% Line 35
	  <'false'> when 'true' ->
	      {'Nothing'}
	  %% Line 36
	  <Value> when 'true' ->
	      {'Just',Value}
	end
'setEnv'/2 =
    %% Line 39
    fun (_0,_1) ->
	call 'os':'putenv'
	    (_0, _1)
'unsetEnv'/1 =
    %% Line 41
    fun (_0) ->
	call 'os':'unsetenv'
	    (_0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('Env')
'module_info'/1 =
    fun (_0) ->
	call 'erlang':'get_module_info'
	    ('Env', _0)
end