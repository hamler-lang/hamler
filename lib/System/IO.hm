-----------------------------------------------------------------------------
-- |
-- Module      :  System.IO
-- Copyright   :  (c) 2020 EMQ Technologies Co., Ltd.
-- License     :  BSD-style (see the LICENSE file)
--
-- Maintainer  :  Feng Lee, feng@emqx.io
--                Yang M, yangm@emqx.io
-- Stability   :  experimental
-- Portability :  portable
--
-- The System IO Module.
--
-----------------------------------------------------------------------------

module System.IO where

import Control.Monad (IO)
import Data.Either
import Data.Unit


-- simple IO operations
foreign import print :: String -> IO Unit
foreign import putStr :: String -> IO Unit
foreign import putStrLn :: String -> IO Unit

-- IO Exception
foreign import data Error :: Type

instance Show Error where
  show = showErrorImpl

foreign import showErrorImpl :: Error -> String

foreign import error :: String -> Error

foreign import message :: Error -> String

foreign import name :: Error -> String

foreign import throwException :: forall a.Error ->  IO a

foreign import catchException :: forall a.(Error -> IO a) -> IO a -> IO a

throw :: forall a.String -> IO a
throw s = throwException (error s)

try :: forall a.IO a -> IO (Either Error a)
try action = catchException (\e -> pure (Left e)) (map Right action)

-- File Operate
type FilePath = String
foreign import readFile :: FilePath -> IO String
foreign import writeFile :: FilePath -> String -> IO Unit
foreign import appendFile :: FilePath -> String -> IO Unit



