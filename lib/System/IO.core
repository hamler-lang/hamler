module 'IO' ['appendFile'/2,
	     'module_info'/0,
	     'module_info'/1,
	     'print'/1,
	     'printf'/1,
	     'println'/1,
	     'readFile'/1,
	     'writeFile'/2]
    attributes [%% Line 1
		'file' =
		    %% Line 1
		    [{[73|[79|[46|[101|[114|[108]]]]]],1}],
		%% Line 27
		'type' =
		    %% Line 27
		    [{'filepath',{'type',27,'string',[]},[]}],
		%% Line 29
		'spec' =
		    %% Line 29
		    [{{'print',1},[{'type',29,'fun',[{'type',29,'product',[{'type',29,'string',[]}]}|[{'atom',29,'ok'}]]}]}],
		%% Line 32
		'spec' =
		    %% Line 32
		    [{{'printf',1},[{'type',32,'fun',[{'type',32,'product',[{'type',32,'string',[]}]}|[{'atom',32,'ok'}]]}]}],
		%% Line 35
		'spec' =
		    %% Line 35
		    [{{'println',1},[{'type',35,'fun',[{'type',35,'product',[{'type',35,'string',[]}]}|[{'atom',35,'ok'}]]}]}],
		%% Line 38
		'spec' =
		    %% Line 38
		    [{{'readFile',1},[{'type',38,'fun',[{'type',38,'product',[{'user_type',38,'filepath',[]}]}|[{'atom',38,'ok'}]]}]}],
		%% Line 42
		'spec' =
		    %% Line 42
		    [{{'writeFile',2},[{'type',42,'fun',[{'type',42,'product',[{'user_type',42,'filepath',[]}|[{'type',42,'binary',[]}]]}|[{'atom',42,'ok'}]]}]}],
		%% Line 46
		'spec' =
		    %% Line 46
		    [{{'appendFile',2},[{'type',46,'fun',[{'type',46,'product',[{'user_type',46,'filepath',[]}|[{'type',46,'binary',[]}]]}|[{'atom',46,'ok'}]]}]}],
		%% Line 50
		'compile' =
		    %% Line 50
		    [{'inline',[{'return',1}]}]]
'print'/1 =
    %% Line 30
    fun (_0) ->
	call 'io':'format'
	    (_0)
'printf'/1 =
    %% Line 33
    fun (_0) ->
	call 'io':'format'
	    (_0)
'println'/1 =
    %% Line 36
    fun (_0) ->
	let <_1> =
	    call 'erlang':'++'
		(_0, [126|[110]])
	in  call 'io':'format'
		(_1)
'readFile'/1 =
    %% Line 39
    fun (_0) ->
	%% Line 51
	( case call 'file':'read_file'
		   (_0) of
	    ( <( 'ok'
		 -| ['compiler_generated'] )> when ( 'true'
						     -| ['compiler_generated'] ) ->
		  ( 'ok'
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    %% Line 52
	    ( <( {( 'ok'
		    -| ['compiler_generated'] ),Data}
		 -| ['compiler_generated'] )> when ( 'true'
						     -| ['compiler_generated'] ) ->
		  Data
	      -| ['compiler_generated'] )
	    %% Line 53
	    ( <( {( 'error'
		    -| ['compiler_generated'] ),Reason}
		 -| ['compiler_generated'] )> when ( 'true'
						     -| ['compiler_generated'] ) ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(Reason)
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_4> when ( 'true'
			  -| ['compiler_generated'] ) ->
		  ( primop ( 'match_fail'
			     -| ['compiler_generated'] )
			(( {( 'function_clause'
			      -| ['compiler_generated'] ),_4}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'writeFile'/2 =
    %% Line 43
    fun (_0,_1) ->
	%% Line 51
	( case call 'file':'write_file'
		   (_0, _1, ['write']) of
	    ( <( 'ok'
		 -| ['compiler_generated'] )> when ( 'true'
						     -| ['compiler_generated'] ) ->
		  ( 'ok'
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    %% Line 52
	    ( <( {( 'ok'
		    -| ['compiler_generated'] ),_6}
		 -| ['compiler_generated'] )> when ( 'true'
						     -| ['compiler_generated'] ) ->
		  _6
	      -| ['compiler_generated'] )
	    %% Line 53
	    ( <( {( 'error'
		    -| ['compiler_generated'] ),Reason}
		 -| ['compiler_generated'] )> when ( 'true'
						     -| ['compiler_generated'] ) ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(Reason)
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_7> when ( 'true'
			  -| ['compiler_generated'] ) ->
		  ( primop ( 'match_fail'
			     -| ['compiler_generated'] )
			(( {( 'function_clause'
			      -| ['compiler_generated'] ),_7}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'appendFile'/2 =
    %% Line 47
    fun (_0,_1) ->
	%% Line 51
	( case call 'file':'write_file'
		   (_0, _1, ['append']) of
	    ( <( 'ok'
		 -| ['compiler_generated'] )> when ( 'true'
						     -| ['compiler_generated'] ) ->
		  ( 'ok'
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    %% Line 52
	    ( <( {( 'ok'
		    -| ['compiler_generated'] ),_6}
		 -| ['compiler_generated'] )> when ( 'true'
						     -| ['compiler_generated'] ) ->
		  _6
	      -| ['compiler_generated'] )
	    %% Line 53
	    ( <( {( 'error'
		    -| ['compiler_generated'] ),Reason}
		 -| ['compiler_generated'] )> when ( 'true'
						     -| ['compiler_generated'] ) ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(Reason)
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_7> when ( 'true'
			  -| ['compiler_generated'] ) ->
		  ( primop ( 'match_fail'
			     -| ['compiler_generated'] )
			(( {( 'function_clause'
			      -| ['compiler_generated'] ),_7}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'return'/1 =
    %% Line 51
    fun (_0) ->
	case _0 of
	  <'ok'> when 'true' ->
	      'ok'
	  %% Line 52
	  <{'ok',Data}> when 'true' ->
	      Data
	  %% Line 53
	  <{'error',Reason}> when 'true' ->
	      call 'erlang':'error'
		  (Reason)
	  ( <_1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_1})
		  -| [{'function_name',{'return',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('IO')
'module_info'/1 =
    fun (_0) ->
	call 'erlang':'get_module_info'
	    ('IO', _0)
end