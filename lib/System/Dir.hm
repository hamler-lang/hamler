-----------------------------------------------------------------------------
-- |
-- Module      :  System.Dir
-- Copyright   :  (c) 2020 EMQ Technologies Co., Ltd.
-- License     :  BSD-style (see the LICENSE file)
--
-- Maintainer  :  Feng Lee, feng@emqx.io
--                Yang M, yangm@emqx.io
-- Stability   :  experimental
-- Portability :  portable
--
-- The System Directory module.
--
-----------------------------------------------------------------------------
module System.Dir where

import Control.Monad (IO)
import Data.Unit (Unit)

type FilePath = String

foreign import mkdir :: FilePath -> IO ()

{-
-- Actions on directories
foreign import createDirectory :: FilePath -> IO ()
foreign import createDirectoryIfMissing :: Boolean -> FilePath -> IO ()
foreign import removeDirectory :: FilePath -> IO ()
foreign import removeDirectoryRecursive :: FilePath -> IO ()
foreign import removePathForcably :: FilePath -> IO ()
foreign import nameDirectory :: FilePath -> FilePath -> IO ()
foreign import listDirectory :: FilePath -> [FilePath]
foreign import getCurrentDirectory :: IO FilePath
foreign import setCurrentDirectory :: FilePath -> IO ()

-- Pre-defined directories
foreign import getHomeDirectory :: IO FilePath
foreign import getUserDocumentsDirectory :: IO FilePath
foreign import getTemporaryDirectory :: IO FilePath

-- Actions on files
foreign import removeFile :: FilePath -> IO ()
foreign import nameFile :: FilePath -> FilePath -> IO ()
foreign import namePath :: FilePath -> FilePath -> IO ()
foreign import copyFile :: FilePath -> FilePath -> IO ()
foreign import getFileSize :: FilePath -> IO Integer

foreign import makeAbsolute :: FilePath -> IO FilePath

-- Existence tests
foreign import doesPathExist :: FilePath -> IO Boolean
foreign import doesFileExist :: FilePath -> IO Boolean
foreign import doesDirectoryExist :: FilePath -> IO Boolean

-- Symbolic links
foreign import createFileLink :: FilePath -> FilePath -> IO ()
foreign import createDirectoryLink :: FilePath -> FilePath -> IO ()
foreign import removeDirectoryLink :: FilePath -> IO ()
foreign import pathIsSymbolicLink :: FilePath -> IO Boolean
foreign import getSymbolicLinkTarget :: FilePath -> IO FilePath

-- Permissions
type Permissions = { readable :: Boolean
                   , writable :: Boolean
                   , executable :: Boolean
                   , searchable :: Boolean
                   }

emptyPermissions :: Permissions
emptyPermissions = { readable : false
                   , writable : false
                   , executable : false
                   , searchable : false
                   }

foreign import getPermissions :: FilePath -> IO Permissions
foreign import setPermissions :: FilePath -> Permissions -> IO ()
foreign import copyPermissions :: FilePath -> FilePath -> IO ()

-- timestamps
foreign import getAccessTime :: FilePath -> IO UTCTime
foreign import getModificationTime :: FilePath -> IO UTCTime
foreign import setAccessTime :: FilePath -> UTCTime -> IO ()
foreign import setModificationTime :: FilePath -> UTCTime -> IO ()

-- $PATH methods
foreign import getSearchPath :: IO [FilePath]

-- extension functions
foreign import splitExtension :: FilePath -> (String,String)
foreign import takeExtension :: FilePath -> String
foreign import replaceExtension :: FilePath -> String -> FilePath
foreign import addExtension :: FilePath -> String -> FilePath


-- filename/directory functions
foreign import getFileName :: FilePath -> String
foreign import combine :: FilePath -> FilePath -> FilePath
-}
