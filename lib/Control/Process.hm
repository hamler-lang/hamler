-----------------------------------------------------------------------------
-- |
-- Module      :  Control.Process
-- Copyright   :  (c) 2020 EMQ Technologies Co., Ltd.
-- License     :  BSD-style (see the LICENSE file)
--
-- Maintainer  :  Feng Lee, feng@emqx.io
--                Yang M, yangm@emqx.io
-- Stability   :  experimental
-- Portability :  portable
--
-- The Erlang Process Module.
--
-----------------------------------------------------------------------------
module Control.Process where

import Control.Monad
import Data.Ref (Reference)

type Process = IO

-- | Erlang Module.
-- foreign import data Module :: Type

-- | Erlang Node.
foreign import data Node :: Type

-- | An erlang process id.
foreign import data Pid :: Type

-- | Erlang timeout.
foreign import data Timeout :: Type

-- foreign import spawn ::forall a b.(a -> Process b) -> a -> Process Pid

foreign import send :: forall a.Pid -> a -> Process a

infixr 1 sendc as !
--- send pid1 ! send pid2 ! send pid3 ! send pid4  ! pure message
sendc :: forall a.(a -> Process a) -> Process a -> Process a
sendc f a = a >>= f

foreign import receive :: forall a.Process a

-- foreign import receiveScanlMatch :: forall a b.(a -> Process b) ->Process b

foreign import link :: Pid -> Process Boolean

foreign import monitor :: Pid -> Process Reference

