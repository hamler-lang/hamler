-----------------------------------------------------------------------------
-- |
-- Module      :  Control.Behaviour.GenServer
-- Copyright   :  (c) 2020 EMQ Technologies Co., Ltd.
-- License     :  BSD-style (see the LICENSE file)
--
-- Maintainer  :  Feng Lee, feng@emqx.io
--                Yang M, yangm@emqx.io
-- Stability   :  experimental
-- Portability :  portable
--
-- The GenServer Behaviour.
--
-----------------------------------------------------------------------------
module Control.Behaviour.GenServer
  ( class GenServer
    -- * start/stop server
  , start
  , startLink
  , startMonitor
  , stop
    -- * cast/call APIs
  , abcast
  , abcastOn
  , call
  , cast
  , multiCall
  , multiCallOn
    -- * callbacks
  , handleCall
  , handleCast
    -- * helper funcs
  , reply
  , noReply
  , module Control.Behaviour.GenServer.Types
  ) where

import Control.Process (Node, Process)
import Data.Atom (atom)
import Data.Pid (Pid)
import Data.Ref (Ref)
import Data.Timeout (Timeout)
import Data.Unit (Unit)
import Control.Behaviour.GenServer.Types

-- | String to server name.
serverName :: String -> Atom
serverName = atom

foreign import start
  :: forall a m s. GenServer m s
  => (a -> Process s) -> a -> Process Pid

foreign import startLink
  :: forall a m s. GenServer m s
  => (a -> Process s) -> a -> Process Pid

foreign import startMonitor
  :: forall a m s. GenServer m s
  => (a -> Process s) -> a -> Process (Pid, Ref)

foreign import stop :: ServerRef -> Process ()

foreign import abcast
  :: forall req. ServerName -> req -> Process ()

foreign import abcastOn
  :: forall req. [Node] -> ServerName -> req -> Process ()

foreign import call
  :: forall req rep. ServerRef -> req -> Process rep

foreign import callTimeout
  :: forall req rep. ServerRef -> req -> Timeout -> Process rep

foreign import cast
  :: forall req. ServerRef -> req -> Process ()

foreign import multiCall
  :: forall req rep. ServerName -> req -> Process rep

foreign import multiCallOn
  :: forall req rep. [Node] -> ServerName -> req -> Process rep

foreign import reply
  :: forall a s. From -> a -> s -> Process s

foreign import noReply
  :: forall s. s -> Process s

class GenServer m s | m -> s, s -> m where
  handleCall :: m -> From -> s -> Process s
  handleCast :: m -> s -> Process s

