module 'Application' ['ensureAllRestarted'/2,
		      'ensureAllStarted'/1,
		      'module_info'/0,
		      'module_info'/1,
		      'restart'/2,
		      'start'/1,
		      'stop'/1,
		      'unload'/1]
    attributes [%% Line 1
		'file' =
		    %% Line 1
		    [{[65|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[46|[101|[114|[108]]]]]]]]]]]]]]],1}]]
'ensureAllStarted'/1 =
    %% Line 25
    fun (_0) ->
	let <_1> =
	    apply %% Line 26
		  'atom'/1
		(_0)
	in  %% Line 26
	    case call 'application':'ensure_all_started'
		     (_1) of
	      %% Line 27
	      <{'ok',Started}> when 'true' ->
		  apply 'appList'/1
		      (Started)
	      %% Line 28
	      <{'error',Reason}> when 'true' ->
		  call 'erlang':'error'
		      (Reason)
	      ( <_2> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_2})
		-| ['compiler_generated'] )
	    end
'ensureAllRestarted'/2 =
    %% Line 31
    fun (_0,_1) ->
	let <_3> =
	    apply %% Line 32
		  'atom'/1
		(_0)
	in  let <_2> =
		apply %% Line 32
		      'restartType'/1
		    (_1)
	    in  %% Line 32
		case call 'application':'ensure_all_started'
			 (_3, _2) of
		  %% Line 33
		  <{'ok',Started}> when 'true' ->
		      apply 'appList'/1
			  (Started)
		  %% Line 34
		  <{'error',Reason}> when 'true' ->
		      call 'erlang':'error'
			  (Reason)
		  ( <_4> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_4})
		    -| ['compiler_generated'] )
		end
'start'/1 =
    %% Line 37
    fun (_0) ->
	let <_1> =
	    apply %% Line 38
		  'atom'/1
		(_0)
	in  %% Line 38
	    case call 'application':'start'
		     (_1) of
	      %% Line 39
	      <'ok'> when 'true' ->
		  'ok'
	      %% Line 40
	      <{'error',Reason}> when 'true' ->
		  call 'erlang':'error'
		      (Reason)
	      ( <_2> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_2})
		-| ['compiler_generated'] )
	    end
'restart'/2 =
    %% Line 43
    fun (_0,_1) ->
	let <_3> =
	    apply %% Line 44
		  'atom'/1
		(_0)
	in  let <_2> =
		apply %% Line 44
		      'restartType'/1
		    (_1)
	    in  %% Line 44
		case call 'application':'start'
			 (_3, _2) of
		  %% Line 45
		  <'ok'> when 'true' ->
		      'ok'
		  %% Line 46
		  <{'error',Reason}> when 'true' ->
		      call 'erlang':'error'
			  (Reason)
		  ( <_4> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_4})
		    -| ['compiler_generated'] )
		end
'stop'/1 =
    %% Line 49
    fun (_0) ->
	let <_1> =
	    apply %% Line 50
		  'atom'/1
		(_0)
	in  %% Line 50
	    call 'application':'stop'
		(_1)
'unload'/1 =
    %% Line 52
    fun (_0) ->
	let <_1> =
	    apply %% Line 53
		  'atom'/1
		(_0)
	in  %% Line 53
	    call 'application':'unload'
		(_1)
'restartType'/1 =
    %% Line 55
    fun (_0) ->
	case _0 of
	  <{'Permanent'}> when 'true' ->
	      'permanent'
	  %% Line 56
	  <{'Transient'}> when 'true' ->
	      'transient'
	  %% Line 57
	  <{'Temporary'}> when 'true' ->
	      'temporary'
	  ( <_1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_1})
		  -| [{'function_name',{'restartType',1}}] )
	    -| ['compiler_generated'] )
	end
'appList'/1 =
    %% Line 59
    fun (_0) ->
	( letrec
	      'lc$^0'/1 =
		  fun (_3) ->
		      case _3 of
			<[App|_2]> when 'true' ->
			    let <_4> =
				call 'erlang':'atom_to_list'
				    (App)
			    in  let <_5> =
				    apply 'lc$^0'/1
					(_2)
				in  ( [_4|_5]
				      -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_7> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_7})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  apply 'lc$^0'/1
		  (_0)
	  -| ['list_comprehension'] )
'atom'/1 =
    %% Line 61
    fun (_0) ->
	call 'erlang':'list_to_existing_atom'
	    (_0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('Application')
'module_info'/1 =
    fun (_0) ->
	call 'erlang':'get_module_info'
	    ('Application', _0)
end