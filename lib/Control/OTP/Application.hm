-----------------------------------------------------------------------------
-- |
-- Module      :  Control.OTP.Application
-- Copyright   :  (c) 2020 EMQ Technologies Co., Ltd.
-- License     :  BSD-style (see the LICENSE file)
--
-- Maintainer  :  Feng Lee, feng@emqx.io
--                Yang M, yangm@emqx.io
-- Stability   :  experimental
-- Portability :  portable
--
-- The Erlang Application module.
--
-----------------------------------------------------------------------------
module Control.OTP.Application where

import Control.OTP.Application.Types
import Control.Process (Process)
import Data.Maybe (Maybe)
import Data.Pid (Pid)
import Data.Unit (Unit)

-- type StartResult = Result AppStartError [Application]

-- Ensure to start an application with its dependencies.
foreign import ensureAllStarted :: Application -> Process [Application]

-- Ensure to restart an application with its dependencies.
foreign import ensureAllRestarted :: Application -> AppRestartType -> Process [Application]

-- Ensure to start an application.
foreign import ensureStarted :: Application -> Process ()

-- Ensure to restart an application.
foreign import ensureRestarted :: Application -> AppRestartType -> Process ()

{-
get_all_env() -> Env

get_all_env(Application) -> Env

get_all_key() -> [] | {ok, Keys}

get_all_key(Application) -> undefined | Keys
-}

foreign import getApplication :: Maybe Application

foreign import getApplicationOfPid :: Pid -> Maybe Application

{-
get_env(Par) -> undefined | {ok, Val}

get_env(Application, Par) -> undefined | {ok, Val}

get_env(Application, Par, Def) -> Val

get_key(Key) -> undefined | {ok, Val}

get_key(Application, Key) -> undefined | {ok, Val}
-}

foreign import load :: Application -> Process ()

foreign import loadedApplications :: Process [AppDescr]

foreign import start :: Application -> Process ()

foreign import restart :: Application -> AppRestartType -> Process ()

foreign import stop :: Application -> Process ()

foreign import takeover :: Application -> AppRestartType -> Process ()

foreign import unload :: Application -> Process ()

foreign import whichApplications :: Process [AppSpec]

