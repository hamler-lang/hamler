-----------------------------------------------------------------------------
-- |
-- Module      :  Demo.GenServer
-- Copyright   :  (c) 2020 EMQ Technologies Co., Ltd.
-- License     :  BSD-style (see the LICENSE file)
--
-- Maintainer  :  Feng Lee, feng@emqx.io
--                Yang M, yangm@emqx.io
-- Stability   :  experimental
-- Portability :  portable
--
-- The GenServer Demo.
--
-----------------------------------------------------------------------------
module Demo.GenServer where

import Prelude
import Control.OTP.GenServer (class GenServer, call, cast, startServer, noReply)

data Args = Arg Integer

data Msg = Inc | Dec | Query

data State = State Integer

instance GenServer Args State Msg where
  init (Arg n) = return (State n)
  handleCast Inc st = return $ noReply $ inc(st)
  handleCast Dec st = return $ noReply $ dec(st)
  handleCast _ st   = return $ noReply st

  handleInfo _ st   = return $ noReply st

inc :: State -> State
inc (State n) = State (n+1)

dec :: State -> State
dec (State n) = State (n-1)

main :: forall a. IO a
main = do
  pid <- startServer (Arg 10)
  cast pid "Hello GenServer"
  reply <- call pid Query
  return reply

