-----------------------------------------------------------------------------
-- |
-- Module      :  Database.ETS
-- Copyright   :  (c) 2020 EMQ Technologies Co., Ltd.
-- License     :  BSD-style (see the LICENSE file)
--
-- Maintainer  :  Feng Lee, feng@emqx.io
--                Yang M, yangm@emqx.io
-- Stability   :  experimental
-- Portability :  portable
--
-- The Erlang ETS Database.
--
-----------------------------------------------------------------------------
module Database.ETS where

import Control.Monad (IO)
import Foreign (ffiIO)

type Table = String

foreign import data TableId :: Type

data TableType = Set | OrderedSet | Bag | DuplicateBag

data AccessType = Public | Protected | Private

type TableOptions = { ttype :: TableType -- TODO: Rename
                    , access :: AccessType
                    , named :: Boolean
                    , keyPos :: Integer
                    , compressed :: Boolean
                    , readConcurrency :: Boolean
                    , writeConcurrency :: Boolean
                    }

foreign import new :: Table -> TableOptions -> IO TableId

all :: IO (List TableId)
all = ffiIO "ets" "all" 0

-- | Delete an ETS table
deleteTable :: TableId -> IO Boolean
deleteTable = ffiIO "ets" "delete" 1

-- | Delete a record.
delete :: forall k. TableId -> k -> IO Boolean
delete = ffiIO "ets" "delete" 2

-- | Delete all records of a table.
deleteAllObjects :: TableId -> IO Boolean
deleteAllObjects = ffiIO "ets" "delete_all_objects" 1

deleteObject :: TableId -> a -> IO Boolean
deleteObject = ffiIO "ets" "delete_object" 2

-- | Displays information about all ETS tables on a terminal.
browse :: IO
browse = ffiIO "ets" "i" 0

-- | Browses table Tab on a terminal.
browseTable :: TableId -> IO
browseTable = ffiIO "ets" "i" 1

{-
file2tab/1
file2tab/2
first/1
foldl/3
foldr/3
from_dets/2
fun2ms/1
give_away/3
info/1
info/2
init_table/2
insert/2
insert_new/2
is_compiled_ms/1
last/1
lookup/2
lookup_element/3
match/1
match/2
match/3
match_delete/2
match_object/1
match_object/2
match_object/3
match_spec_compile/1
match_spec_run/2
member/2
new/2
next/2
prev/2
rename/2
repair_continuation/2
safe_fixtable/2
select/1
select/2
select/3
select_count/2
select_delete/2
select_replace/2
select_reverse/1
select_reverse/2
select_reverse/3
setopts/2
slot/2
tab2file/2
tab2file/3
tab2list/1
tabfile_info/1
table/1
table/2
take/2
test_ms/2
to_dets/2
update_counter/3
update_counter/4
update_element/3
whereis/1
-}


tNew :: IO TableId
tNew = new "xtab" { ttype: Set,
                    access: Public,
                    named: true,
                    keyPos: 1,
                    compressed: true,
                    readConcurrency : false,
                    writeConcurrency : false
                   }
