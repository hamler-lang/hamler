-----------------------------------------------------------------------------
-- |
-- Module      :  Data.Tuple
-- Copyright   :  (c) 2020 EMQ Technologies Co., Ltd.
-- License     :  BSD-style (see the LICENSE file)
--
-- Maintainer  :  Feng Lee, feng@emqx.io
--                Yang M, yangm@emqx.io
-- Stability   :  experimental
-- Portability :  portable
--
-- The Tuple DataType.
--
-----------------------------------------------------------------------------
module Data.Tuple where

foreign import data Tuple :: Type

fst :: forall a b. (a, b) -> a
fst (a, _) = a

snd :: forall a b. (a, b) -> b
snd (_, b) = b

swap :: forall a b. (a, b) -> (b, a)
swap (a, b) = (b, a)

{- TODO:
curry :: ((a, b) -> c) -> a -> b -> c
curry f x y =  f (x, y)

uncurry :: (a -> b -> c) -> ((a, b) -> c)
uncurry f p =  f (fst p) (snd p)
-}

foreign import elem :: forall a. Integer -> Tuple -> a
foreign import setElem :: forall a. Integer -> a -> Tuple -> Tuple
foreign import size :: forall a. Tuple -> Integer

