-----------------------------------------------------------------------------
-- |
-- Module      :  Data.Show
-- Copyright   :  (c) 2020 EMQ Technologies Co., Ltd.
-- License     :  BSD-style (see the LICENSE file)
--
-- Maintainer  :  Feng Lee, feng@emqx.io
--                Yang M, yangm@emqx.io
-- Stability   :  experimental
-- Portability :  portable
--
-- The Show typeclass.
--
-----------------------------------------------------------------------------
module Data.Show
  ( class Show, show, showAny
  ) where

class Show a where
  show :: a -> String

instance Show Atom where
  show = showAtomImpl

instance Show Boolean where
  show true = "true"
  show false = "false"

instance Show Integer where
  show = showIntImpl

instance Show Float where
  show f = showFloatImpl f

instance Show Char where
  show c = showCharImpl c

instance Show [Char] where
  show s = s

foreign import showAtomImpl :: Atom -> String
foreign import showIntImpl :: Integer -> String
foreign import showFloatImpl :: Float -> String
foreign import showCharImpl :: Char -> String

foreign import showAny :: forall a. a -> String
