module Test where

import Test.QuickCheck (TestGroup(..), runTest)
import Prelude
import Test.Data.String as S
import Test.Data.Map as M
import Test.Data.Atom as A
import Test.Data.Array as A1
import Test.Data.Bool as TB
import Test.Data.Either as Ei
import Test.Data.Tuple as Tu
import Test.Data.Maybe as May
import Test.Data.OrdDict as OD
import Test.Data.OrdSets as OS
import Test.Data.Queue as Q
import Test.Data.Result as R
import Test.Data.Set as St

main :: IO ()
main = runTest ( TxG "Data" [
                   -- TxG "Binary" [B.test]
                   TxG "Map"    [M.test]
                 , TxG "String" [S.test]
                 , TxG "Atom"   [A.test]
                 , TxG "Array"  [A1.test]
                 , TxG "Bool"  [TB.test]
                 , TxG "Either" [Ei.test]
                 , TxG "Tuple" [Tu.test]
                 , TxG "Maybe" [May.test]
                 , TxG "OrdDict" [OD.test]
                 , TxG "OrdSets" [OS.test]
                 , TxG "Queue" [Q.test]
                 , TxG "Result" [R.test]
                 , TxG "Set"   [St.test]
                 ]
               )

