module Test.Data.Queue where

import Test.QuickCheck (TestGroup(..), TestResult, quickCheck)
import Prelude
import Data.Queue as Q

propShow :: Q.Queue Integer -> Bool
propShow x = show x == show (Q.toList x)

propEq :: Q.Queue Integer -> Bool
propEq x = x == x

propOrd :: Q.Queue Integer -> Q.Queue Integer -> Bool
propOrd x y = (x < y) == (Q.toList x < Q.toList y)

test :: TestGroup (Integer -> IO TestResult)
test = Exe [ quickCheck "show" propShow
           , quickCheck "eq" propEq
           , quickCheck "ord" propOrd
           ]

