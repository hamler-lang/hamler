module Test.Data.Set where

import Test.QuickCheck (TestGroup(..), TestResult, quickCheck)
import Prelude
import Data.Set as S

propShow :: S.Set Integer -> Bool
propShow x = show x == show (S.toList x)

propEq :: S.Set Integer -> Bool
propEq x = x == x

propOrd :: S.Set Integer -> S.Set Integer -> Bool
propOrd x y = (x < y) == (S.toList x < S.toList y)

test :: TestGroup (Integer -> IO TestResult)
test = Exe [ quickCheck "show" propShow
           , quickCheck "eq" propEq
           , quickCheck "ord" propOrd
           ]
