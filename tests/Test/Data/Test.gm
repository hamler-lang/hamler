module Test where

import Test.QuickCheck (TestGroup(..), runTest)
import Prelude
import Test.Data.String as S
import Test.Data.Map as M
import Test.Data.Atom as A
import Test.Data.Array as A1
import Test.Data.Bool as TB
import Test.Data.List as L
import Test.Data.Tuple as T
import Test.Data.Queue as Q
import Test.Data.Show as S1
import Test.Data.Maybe as Maybe
import Test.Data.Monoid as Monoid
import Test.Data.Semigroup as G

main :: IO ()
main = runTest ( TxG "Data" [
                   -- TxG "Binary" [B.test]
                   TxG "Map"    [M.test]
                 , TxG "String" [S.test]
                 , TxG "Atom"   [A.test]
                 , TxG "Array"  [A1.test]
                 , TxG "Bool"   [TB.test]
                 , TxG "List"   [L.test]
                 , TxG "Tuple"  [T.test]
                 , TxG "Queue"  [Q.test]
                 , TxG "Show"   [S1.test]
                 , TxG "Maybe"  [Maybe.test]
                 , TxG "Monoid" [Monoid.test]
                 , TxG "Semigroup" [G.test]
                 ]
               )

 
